<a href="/command-line">Back</a>
<hr>
<p>CP(1) BSD General Commands Manual CP(1)</p>

<p>NAME<br />
 cp -- copy files</p>

<p>SYNOPSIS<br />
 cp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file target_file<br />
 cp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file ... target_directory</p>

<p>DESCRIPTION<br />
 In the first synopsis form, the cp utility copies the contents of the source_file to the target_file. In the second synop-<br />
 sis form, the contents of each named source_file is copied to the destination target_directory. The names of the files<br />
 themselves are not changed. If cp detects an attempt to copy a file to itself, the copy will fail.</p>

<p> The following options are available:</p>

<p> -a Same as -pPR options. Preserves structure and attributes of files but not directory structure.</p>

<p> -f If the destination file cannot be opened, remove it and create a new file, without prompting for confirmation regard-<br />
 less of its permissions. (The -f option overrides any previous -n option.)</p>

<p> The target file is not unlinked before the copy. Thus, any existing access rights will be retained.</p>

<p> -H If the -R option is specified, symbolic links on the command line are followed. (Symbolic links encountered in the<br />
 tree traversal are not followed.)</p>

<p> -i Cause cp to write a prompt to the standard error output before copying a file that would overwrite an existing file.<br />
 If the response from the standard input begins with the character &#96;y' or &#96;Y', the file copy is attempted. (The -i<br />
 option overrides any previous -n option.)</p>

<p> -L If the -R option is specified, all symbolic links are followed.</p>

<p> -n Do not overwrite an existing file. (The -n option overrides any previous -f or -i options.)</p>

<p> -P If the -R option is specified, no symbolic links are followed. This is the default.</p>

<p> -p Cause cp to preserve the following attributes of each source file in the copy: modification time, access time, file<br />
 flags, file mode, user ID, and group ID, as allowed by permissions. Access Control Lists (ACLs) and Extended<br />
 Attributes (EAs), including resource forks, will also be preserved.</p>

<p> If the user ID and group ID cannot be preserved, no error message is displayed and the exit value is not altered.</p>

<p> If the source file has its set-user-ID bit on and the user ID cannot be preserved, the set-user-ID bit is not pre-<br />
 served in the copy's permissions. If the source file has its set-group-ID bit on and the group ID cannot be pre-<br />
 served, the set-group-ID bit is not preserved in the copy's permissions. If the source file has both its set-user-ID<br />
 and set-group-ID bits on, and either the user ID or group ID cannot be preserved, neither the set-user-ID nor set-<br />
 group-ID bits are preserved in the copy's permissions.</p>

<p> -R If source_file designates a directory, cp copies the directory and the entire subtree connected at that point. If<br />
 the source_file ends in a /, the contents of the directory are copied rather than the directory itself. This option<br />
 also causes symbolic links to be copied, rather than indirected through, and for cp to create special files rather<br />
 than copying them as normal files. Created directories have the same mode as the corresponding source directory,<br />
 unmodified by the process' umask.</p>

<p> In -R mode, cp will continue copying even if errors are detected.</p>

<p> Note that cp copies hard-linked files as separate files. If you need to preserve hard links, consider using tar(1),<br />
 cpio(1), or pax(1) instead.</p>

<p> -v Cause cp to be verbose, showing files as they are copied.</p>

<p> -X Do not copy Extended Attributes (EAs) or resource forks.</p>

<p> For each destination file that already exists, its contents are overwritten if permissions allow. Its mode, user ID, and<br />
 group ID are unchanged unless the -p option was specified.</p>

<p> In the second synopsis form, target_directory must exist unless there is only one named source_file which is a directory<br />
 and the -R flag is specified.</p>

<p> If the destination file does not exist, the mode of the source file is used as modified by the file mode creation mask<br />
 (umask, see csh(1)). If the source file has its set-user-ID bit on, that bit is removed unless both the source file and<br />
 the destination file are owned by the same user. If the source file has its set-group-ID bit on, that bit is removed<br />
 unless both the source file and the destination file are in the same group and the user is a member of that group. If both<br />
 the set-user-ID and set-group-ID bits are set, all of the above conditions must be fulfilled or both bits are removed.</p>

<p> Appropriate permissions are required for file creation or overwriting.</p>

<p> Symbolic links are always followed unless the -R flag is set, in which case symbolic links are not followed, by default.<br />
 The -H or -L flags (in conjunction with the -R flag) cause symbolic links to be followed as described above. The -H, -L<br />
 and -P options are ignored unless the -R option is specified. In addition, these options override each other and the com-<br />
 mand's actions are determined by the last one specified.</p>

<p> If cp receives a SIGINFO (see the status argument for stty(1)) signal, the current input and output file and the percentage<br />
 complete will be written to the standard output.</p>

<p>EXIT STATUS<br />
 The cp utility exits 0 on success, and >0 if an error occurs.</p>

<p>COMPATIBILITY<br />
 Historic versions of the cp utility had a -r option. This implementation supports that option; however, its use is<br />
 strongly discouraged, as it does not correctly copy special files, symbolic links, or fifo's.</p>

<p> The -v and -n options are non-standard and their use in scripts is not recommended.</p>

<p>LEGACY DESCRIPTION<br />
 In legacy mode, -f will override -i. Also, under the -f option, the target file is always unlinked before the copy. Thus,<br />
 new access rights will always be set.</p>

<p> In -R mode, copying will terminate if an error is encountered.</p>

<p> For more information about legacy mode, see compat(5).</p>

<p>SEE ALSO<br />
 mv(1), rcp(1), umask(2), fts(3), compat(5), symlink(7)</p>

<p>STANDARDS<br />
 The cp command is expected to be IEEE Std 1003.2 (&#96;&#96;POSIX.2'') compatible.</p>

<p>HISTORY<br />
 A cp command appeared in Version 1 AT&amp;T UNIX.</p>

<p>BSD February 23, 2005 BSD</p>
